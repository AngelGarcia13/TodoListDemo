name: CI/CD Pipeline

on:
  pull_request:
    branches:
    - main
  push:
    branches:
      - main

jobs:
  build-run-and-test:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      checks: write
      contents: write
      pull-requests: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and Run Docker Compose
        run: |
          docker-compose build
          docker-compose up -d
      
      - name: Copy Unit Test Results
        run: docker cp $(docker-compose ps -q todolistapi):/app/testresults ./test-results
      
      - name: Unit Tests Reporter
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: Unit Tests
          path: "**/TodoListUnitTests.trx"                            
          reporter: dotnet-trx
          only-summary: 'false'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: true          
      
      - name: Run Newman in Docker (CI API Tests)        
        run: docker run --network host --name api-integration-tests -v "$(pwd)/TodoListApiTests/postman:/etc/newman"  -t postman/newman run TodoListApi.postman_collection.json --env-var "baseUrl=http://localhost:8080" --verbose --insecure --reporters cli,junit --reporter-junit-export result/api-tests-results.xml
      
      - name: Copy CI API Test Results
        run: docker cp api-integration-tests:etc/newman/result/api-tests-results.xml .
      
      - name: API Tests Reporter
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: API Tests
          path: api-tests-results.xml
          reporter: java-junit
          only-summary: 'false'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: true
      
      - name: Copy API Artifact
        run: docker cp $(docker-compose ps -q todolistapi):/app/publish ./todolistapi
        if: github.event_name != 'pull_request'
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: todolistapi-net-app
          path: ./todolistapi
        if: github.event_name != 'pull_request'
      
      - name: Upload artifact for newman testing
        uses: actions/upload-artifact@v2
        with:
          name: todolistapi-postman-collection
          path: ./TodoListApiTests
        if: github.event_name != 'pull_request'
        
      - name: Stop Docker Compose
        run: docker-compose down

  qa-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build-run-and-test
    environment:
      name: 'QA'
      url: ${{ steps.deploy-to-webapp-qa.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: todolistapi-net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp-qa
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'api-todolist'
          slot-name: 'qa'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_QA }}
          package: .      
      
  qa-testing:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      checks: write
      contents: write
      pull-requests: write
      actions: write
    needs: qa-deploy
    environment:
      name: 'QA'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: todolistapi-postman-collection
       
      - name: Run Newman in Docker (QA API Tests)
        run: docker run --network host --name api-integration-tests-qa -v "$(pwd)/postman:/etc/newman"  -t postman/newman run TodoListApi.postman_collection.json --env-var "baseUrl=${{ vars.AZURE_WEBAPP_URL }}" --verbose --insecure --reporters cli,junit --reporter-junit-export result/api-tests-results.xml
      
      - name: Copy QA API Test Results
        run: docker cp api-integration-tests-qa:etc/newman/result/api-tests-results.xml .
  
      - name: QA API Tests Reporter
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: QA API Tests
          path: api-tests-results.xml
          reporter: java-junit
          only-summary: 'false'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: true
  
  stg-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: qa-testing
    environment:
      name: 'STG'
      url: ${{ steps.deploy-to-webapp-stg.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: todolistapi-net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp-stg
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'api-todolist'
          slot-name: 'stg'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_STG }}
          package: .      
       
  stg-testing:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      checks: write
      contents: write
      pull-requests: write
      actions: write
    needs: stg-deploy
    environment:
      name: 'STG'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: todolistapi-postman-collection
       
      - name: Run Newman in Docker (STG API Tests)
        run: docker run --network host --name api-integration-tests-stg -v "$(pwd)/postman:/etc/newman"  -t postman/newman run TodoListApi.postman_collection.json --env-var "baseUrl=${{ vars.AZURE_WEBAPP_URL }}" --verbose --insecure --reporters cli,junit --reporter-junit-export result/api-tests-results.xml
      
      - name: Copy STG API Test Results
        run: docker cp api-integration-tests-stg:etc/newman/result/api-tests-results.xml .
      
      - name: STG API Tests Reporter
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: STG API Tests
          path: api-tests-results.xml
          reporter: java-junit
          only-summary: 'false'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: true     
  
  prod-deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: stg-testing
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: todolistapi-net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'api-todolist'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FC8F2BCA310241C287F2F1C518677D25 }}
          package: .      
