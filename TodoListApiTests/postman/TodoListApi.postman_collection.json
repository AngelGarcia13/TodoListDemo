{
	"info": {
		"_postman_id": "d190b5de-2ad9-4206-bab3-453b04d94ad2",
		"name": "TodoListApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "226033"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "TodoItems",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieves a specific TodoItem by ID.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var baseUrl = pm.environment.get('baseUrl');",
													"",
													"var todoItem = {",
													"    title: 'New TodoItem',",
													"    isComplete: false",
													"};",
													"",
													"pm.sendRequest(",
													"    {",
													"        url: `${baseUrl}/api/TodoItems`,",
													"        method: 'POST',",
													"        header: 'Content-Type:application/json',",
													"        body: JSON.stringify(todoItem)",
													"        }, function (err, res) {",
													"            pm.expect(err).to.be.null;",
													"            pm.expect(res).to.have.property('code', 201);",
													"            pm.expect(res.json()).to.be.an('object');",
													"            pm.expect(res.json()).to.have.property('id');",
													"            pm.expect(res.json()).to.have.property('title', todoItem.title);",
													"            pm.expect(res.json()).to.have.property('isComplete', todoItem.isComplete);",
													"            var newTodoItemId = res.json().id;",
													"            pm.variables.set(\"todoItemId\", newTodoItemId);",
													"        });",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('GetTodoItem', function () {",
													"    pm.expect(pm.response).to.have.property('code', 200);",
													"    pm.expect(pm.response.json()).to.have.property('id', pm.variables.get('todoItemId'));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems/{{todoItemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems",
												"{{todoItemId}}"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"title\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"isComplete\": \"<boolean>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"aliqua0\": {},\n  \"proident_8\": {}\n}"
										}
									]
								},
								{
									"name": "Updates an existing TodoItem.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var baseUrl = pm.environment.get('baseUrl');",
													"",
													"var todoItem = {",
													"    title: 'New TodoItem',",
													"    isComplete: false",
													"};",
													"",
													"pm.sendRequest(",
													"    {",
													"        url: `${baseUrl}/api/TodoItems`,",
													"        method: 'POST',",
													"        header: 'Content-Type:application/json',",
													"        body: JSON.stringify(todoItem)",
													"        }, function (err, res) {",
													"            pm.expect(err).to.be.null;",
													"            pm.expect(res).to.have.property('code', 201);",
													"            pm.expect(res.json()).to.be.an('object');",
													"            pm.expect(res.json()).to.have.property('id');",
													"            pm.expect(res.json()).to.have.property('title', todoItem.title);",
													"            pm.expect(res.json()).to.have.property('isComplete', todoItem.isComplete);",
													"            var newTodoItemId = res.json().id;",
													"            pm.variables.set(\"todoItemId\", newTodoItemId);",
													"        });",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('UpdateTodoItem', function () {",
													"    pm.expect(pm.response.code).to.equal(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"{{todoItemId}}\",\n  \"title\": \"<string>\",\n  \"isComplete\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems/{{todoItemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems",
												"{{todoItemId}}"
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"isComplete\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"isComplete\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"isComplete\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"aliqua0\": {},\n  \"proident_8\": {}\n}"
										}
									]
								},
								{
									"name": "Deletes a TodoItem by ID.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var baseUrl = pm.environment.get('baseUrl');",
													"",
													"var todoItem = {",
													"    title: 'New TodoItem',",
													"    isComplete: false",
													"};",
													"",
													"pm.sendRequest(",
													"    {",
													"        url: `${baseUrl}/api/TodoItems`,",
													"        method: 'POST',",
													"        header: 'Content-Type:application/json',",
													"        body: JSON.stringify(todoItem)",
													"        }, function (err, res) {",
													"            pm.expect(err).to.be.null;",
													"            pm.expect(res).to.have.property('code', 201);",
													"            pm.expect(res.json()).to.be.an('object');",
													"            pm.expect(res.json()).to.have.property('id');",
													"            pm.expect(res.json()).to.have.property('title', todoItem.title);",
													"            pm.expect(res.json()).to.have.property('isComplete', todoItem.isComplete);",
													"            var newTodoItemId = res.json().id;",
													"            pm.variables.set(\"todoItemId\", newTodoItemId);",
													"        });",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('DeleteTodoItem', function () {",
													"    pm.expect(pm.response).to.have.property('code', 204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems/{{todoItemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems",
												"{{todoItemId}}"
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": null
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TodoItems/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TodoItems",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"aliqua0\": {},\n  \"proident_8\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves all TodoItems.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('GetTodoItems', function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"    pm.expect(pm.response.json()).to.be.an('array');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/TodoItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TodoItems"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"title\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isComplete\": \"<boolean>\"\n  },\n  {\n    \"title\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"isComplete\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Retrieves all TodoItems.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Mon, 17 Jul 2023 23:03:31 GMT"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "Creates a new TodoItem.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('CreateTodoItem', function () {",
											"    pm.expect(pm.response).to.have.property('code', 201);",
											"    pm.expect(pm.response.json()).to.be.an('object');",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"    pm.expect(pm.response.json()).to.have.property('title', '<string>');",
											"    pm.expect(pm.response.json()).to.have.property('isComplete', true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"isComplete\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/TodoItems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TodoItems"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"isComplete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"title\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"isComplete\": \"<boolean>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"<string>\",\n  \"isComplete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/TodoItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TodoItems"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<string>"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//pm.environment.set(\"baseUrl\", 'https://localhost:7182')"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7182"
		}
	]
}